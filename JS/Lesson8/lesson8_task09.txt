функция isBrakets, которая принимает строку s, содержащую скобки '[]', проверяет правильность 
расстановки скобок. 
Возвращает true or false

// console.log(isBrakets("[{()}]")); //- true
// console.log(isBrakets("[({(})]")) //- false
// console.log(isBrakets("{[}")) //- false
// console.log(isBrakets("({}{}([{}]))")) //- true
// console.log(isBrakets("({")) //- false
// console.log(isBrakets("((({{{[[)]]}}})))")) // false
// console.log(isBrakets("(){()}[]()[]{{()}}")) //true

// function isBrakets(str){

//   let arr = str.split('');
//    for (let i = 0;i<arr.length;i++){
//      if (arr[i]=='(' && arr[i+1] == ')'|| arr[i]=='[' && arr[i+1] == ']'|| arr[i]=='{'&& arr[i+1] == '}'){
//        arr.splice(i,2);
//        i-=2;
//      }
//    }
//   return arr.length == 0
//  }

// function isBalanced (str){
//   let arr = [];
//   for (let i=0; i<str.length; i++){
//     if (str[i] == '(' || str [i] == '[' || str[i] == '{') {
//       arr.push(str[i]);
//     }
//     else {
//       let delChar = arr.pop();
//       if ( delChar == '(' && str[i] !== ')' ) {return 'invalid';};
      
//       if ( delChar == '{' && str[i] !== '}' ) {return 'invalid';};
      
//       if ( delChar == '[' && str[i] !== ']' ) {return 'invalid';};
//     }
//   }
//   return arr.length == 0 ? 'valid': 'invalid';
  
// }

